{"version":3,"sources":["Components/Filter/styles.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactsList/ContactsList.js","App.js","index.js","Components/ContactForm/styles.module.css","Components/ContactsList/styles.module.css"],"names":["module","exports","ContactForm","state","name","number","reset","setState","handleChange","evt","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","nameInputId","shortid","generate","phoneInputId","this","className","styles","label","htmlFor","input","type","onChange","id","button","Component","Filter","filter","filterInputId","ContactsList","contacts","onDelete","list","map","contact","item","onClick","App","addContact","verificationContact","find","alert","prevState","deleteContact","contactId","getVisibleContact","nolmalizedFilter","toLowerCase","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,+JCgEXC,E,4MA5DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,MAAQ,WACN,EAAKC,SAAS,CACZH,KAAM,GACNC,OAAQ,M,EAIZG,aAAe,SAAAC,GACb,EAAKF,SAAL,eAAiBE,EAAIC,cAAcN,KAAOK,EAAIC,cAAcC,S,EAG9DC,aAAe,SAAAH,GACbA,EAAII,iBADgB,MAEK,EAAKV,MAAtBC,EAFY,EAEZA,KAAMC,EAFM,EAENA,OAEd,EAAKS,MAAMC,SAAS,CAAEX,OAAMC,WAE5B,EAAKC,S,4CAGP,WACE,IAAMU,EAAcC,IAAQC,WACtBC,EAAeF,IAAQC,WAC7B,OACE,uBAAMH,SAAUK,KAAKR,aAArB,UACE,uBAAOS,UAAWC,IAAOC,MAAOC,QAASR,EAAzC,kBAGA,uBACEK,UAAWC,IAAOG,MAClBrB,KAAK,OACLO,MAAOS,KAAKjB,MAAMC,KAClBsB,KAAK,OACLC,SAAUP,KAAKZ,aACfoB,GAAIZ,IAEN,uBAAOK,UAAWC,IAAOC,MAAOC,QAASL,EAAzC,oBAGA,uBACEE,UAAWC,IAAOG,MAClBrB,KAAK,SACLO,MAAOS,KAAKjB,MAAME,OAClBqB,KAAK,MACLC,SAAUP,KAAKZ,aACfoB,GAAIT,IAEN,wBAAQE,UAAWC,IAAOO,OAAQH,KAAK,SAAvC,gC,GArDkBI,a,iBCkBXC,EAjBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQL,EAAe,EAAfA,SAClBM,EAAgBhB,IAAQC,WAC9B,OACE,qCACE,uBAAOM,QAASS,EAAhB,kCACA,uBACEZ,UAAWC,IAAOG,MAClBC,KAAK,OACLtB,KAAK,SACLO,MAAOqB,EACPJ,GAAIK,EACJN,SAAUA,Q,gBCYHO,EAxBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACE,oBAAIf,UAAWC,IAAOe,KAAtB,SACGF,EAASG,KAAI,SAAAC,GACZ,OACE,qBAAIlB,UAAWC,IAAOkB,KAAtB,UACE,iCAAOD,EAAQnC,KAAf,OACA,qCAAQmC,EAAQlC,UAChB,wBACEgB,UAAWC,IAAOO,OAClBH,KAAK,SACLe,QAAS,WACPL,EAASG,EAAQX,KAJrB,sBAH+BW,EAAQX,UCkFpCc,E,4MApFbvC,MAAQ,CACNgC,SAAU,GAOVH,OAAQ,I,EAkBVW,WAAa,YAAuB,IAApBvC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAEduC,EADe,EAAKzC,MAAlBgC,SAC6BU,MAAK,SAAAN,GAAO,OAAIA,EAAQnC,OAASA,KAEhEmC,EAAU,CACdX,GAAIX,IAAQC,WACZd,OACAC,UAGEuC,EACFE,MAAM,GAAD,OAAI1C,EAAJ,4BAEL,EAAKG,UAAS,SAAAwC,GAAS,MAAK,CAC1BZ,SAAS,GAAD,mBAAMY,EAAUZ,UAAhB,CAA0BI,S,EAKxCS,cAAgB,SAAAC,GACd,EAAK1C,UAAS,SAAAwC,GAAS,MAAK,CAC1BZ,SAAUY,EAAUZ,SAASH,QAAO,SAAAO,GAAO,OAAIA,EAAQX,KAAOqB,U,EAIlEzC,aAAe,SAAAC,GACb,EAAKF,SAAS,CAAEyB,OAAQvB,EAAIC,cAAcC,S,EAG5CuC,kBAAoB,WAAO,IAAD,EACK,EAAK/C,MAA1BgC,EADgB,EAChBA,SACFgB,EAFkB,EACNnB,OACcoB,cAEhC,OAAOjB,EAASH,QAAO,SAAAO,GAAO,OAC5BA,EAAQnC,KAAKgD,cAAcC,SAASF,O,uDAjDxC,WACE,IAAMhB,EAAWmB,aAAaC,QAAQ,YAChCC,EAAgBC,KAAKC,MAAMvB,GAE7BqB,GACFpC,KAAKb,SAAS,CAAE4B,SAAUqB,M,gCAI9B,SAAmBG,EAAWZ,GACxB3B,KAAKjB,MAAMgC,WAAaY,EAAUZ,UACpCmB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUzC,KAAKjB,MAAMgC,a,oBA0C/D,WAAU,IACAH,EAAWZ,KAAKjB,MAAhB6B,OAEF8B,EAAkB1C,KAAK8B,oBAE7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAanC,SAAUK,KAAKuB,aAC5B,0CACA,cAAC,EAAD,CAAQX,OAAQA,EAAQL,SAAUP,KAAKZ,eACvC,cAAC,EAAD,CACE2B,SAAU2B,EACV1B,SAAUhB,KAAK4B,uB,GA9EPlB,aCFlBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BnE,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,wB,kBCAxFD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,0B","file":"static/js/main.48bd81a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__RKKCV\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport styles from './styles.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = evt => {\n    this.setState({ [evt.currentTarget.name]: evt.currentTarget.value });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit({ name, number });\n\n    this.reset();\n  };\n\n  render() {\n    const nameInputId = shortid.generate();\n    const phoneInputId = shortid.generate();\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={styles.input}\n          name=\"name\"\n          value={this.state.name}\n          type=\"text\"\n          onChange={this.handleChange}\n          id={nameInputId}\n        />\n        <label className={styles.label} htmlFor={phoneInputId}>\n          Number\n        </label>\n        <input\n          className={styles.input}\n          name=\"number\"\n          value={this.state.number}\n          type=\"tel\"\n          onChange={this.handleChange}\n          id={phoneInputId}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  const filterInputId = shortid.generate();\n  return (\n    <>\n      <label htmlFor={filterInputId}>Find contact by name</label>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        id={filterInputId}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => {\n        return (\n          <li className={styles.item} key={contact.id}>\n            <span>{contact.name}:</span>\n            <span> {contact.number}</span>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => {\n                onDelete(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactsList from './Components/ContactsList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const verificationContact = contacts.find(contact => contact.name === name);\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (verificationContact) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleChange = evt => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    const nolmalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(nolmalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContact();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__1DdVh\",\"button\":\"styles_button__2mSuC\",\"input\":\"styles_input__1H1rm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__1ODqO\",\"item\":\"styles_item__3AIYD\",\"button\":\"styles_button__blYCd\"};"],"sourceRoot":""}